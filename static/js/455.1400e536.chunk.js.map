{"version":3,"file":"static/js/455.1400e536.chunk.js","mappings":"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","sources":["Util/api.js","components/Poster.jsx","pages/pages.styled.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE = 'https://api.themoviedb.org/3/';\nconst KEY = '?api_key=66413c0c73bd8d6f9d602d8ba291e1c5';\nconst LANG = '&language=en-US';\n\nexport async function getTrends() {\n  const response = await axios(BASE + 'trending/all/day' + KEY);\n  return response.data.results;\n}\n\nexport async function getDetails(id) {\n  const response = await axios(BASE + 'movie/' + id + KEY + LANG);\n  return response.data;\n}\n\nexport async function getCast(id) {\n  const response = await axios(BASE + 'movie/' + id + '/credits' + KEY + LANG);\n  return response.data.cast;\n}\n\nexport async function getReview(id) {\n  const response = await axios(BASE + 'movie/' + id + '/reviews' + KEY + LANG);\n  return response.data.results;\n}\n\nexport async function getMovies(q) {\n  const response = await axios(\n    BASE +\n      'search/movie' +\n      KEY +\n      LANG +\n      '/&query=' +\n      q +\n      '&page=1&include_adult=false'\n  );\n\n  return response.data.results;\n}\n","import portrait from '../portrait.jpeg';\nconst BASE_POSTER = 'https://image.tmdb.org/t/p/w500';\n// const BASE_POSTER2 = 'https://image.tmdb.org/t/p/w200';\n\nfunction Poster({ url, alt, width }) {\n  // const [img, setImg] = useState(null);\n\n  return (\n    <img width={width} src={url ? BASE_POSTER + url : portrait} alt={alt} />\n  );\n}\nexport default Poster;\n","import styled from 'styled-components';\n\nexport const Details = styled.div`\n  article {\n    display: flex;\n    gap: 20px;\n    align-items: start;\n  }\n\n  h2 {\n    margin: 0;\n    font-size: 1.5rem;\n    span {\n      font-size: 1.3rem;\n    }\n  }\n  h3 {\n    margin: 30px 0 0;\n    font-size: 1.3rem;\n    span {\n      font-size: 1.1rem;\n      font-weight: 300;\n      font-style: italic;\n    }\n  }\n\n  ul {\n    display: flex;\n    gap: 20px;\n    list-style: none;\n    padding: 0;\n  }\n`;\n","import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useEffect, useState, Suspense, useRef } from 'react';\n\nimport { Details } from './pages.styled';\n\nimport { getDetails } from '../Util/api';\nimport Poster from '../components/Poster';\n\nfunction MovieDetails() {\n  const [details, setDetails] = useState(null);\n  const {\n    poster_path = '',\n    original_title = '',\n    name = '',\n    release_date = '',\n    genres = '',\n    overview = '',\n  } = details ?? {};\n\n  const location = useLocation();\n  const comeBack = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    getDetails(id).then(setDetails);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const { id } = useParams();\n  //   const { poster_path, name, genres, overview, release_date } = details;\n\n  return (\n    details && (\n      <Details>\n        <p>\n          {/* link to back */}\n          <Link to={comeBack.current}>Go back</Link>\n        </p>\n        <article className=\"card\">\n          <Poster width={200} url={poster_path} alt={name}></Poster>\n          <div className=\"subscribe\">\n            <h2>\n              {original_title}\n              <span> ({release_date.substring(0, 4)})</span>\n            </h2>\n            <h3>\n              Genries:\n              <span> {genres.map(({ name }) => name).join(', ')}</span>\n            </h3>\n            {/* <p>\n              {genres?.map(({ id, name }) => (\n                <li key={id}>{name}</li>\n              ))}\n            </p> */}\n            <h3>Overview:</h3>\n            <p>{overview}</p>\n          </div>\n        </article>\n        <hr />\n        <p>Additional information:</p>\n        <ul>\n          <li>\n            <Link to={'cast'}>Cast</Link>\n          </li>\n          <li>\n            <Link to={'reviews'}>Reviews</Link>\n          </li>\n        </ul>\n        <Suspense>\n          <Outlet />\n        </Suspense>\n      </Details>\n    )\n  );\n}\n\nexport default MovieDetails;\n"],"names":["BASE","KEY","LANG","getTrends","_getTrends","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","sent","abrupt","data","results","stop","getDetails","_x","_getDetails","_callee2","id","_context2","getCast","_x2","_getCast","_callee3","_context3","cast","getReview","_x3","_getReview","_callee4","_context4","getMovies","_x4","_getMovies","_callee5","q","_context5","_ref","url","alt","width","_jsx","src","portrait","Details","styled","_templateObject","_taggedTemplateLiteral","_location$state","_useState","useState","_useState2","_slicedToArray","details","setDetails","_ref$poster_path","poster_path","_ref$original_title","original_title","_ref$name","name","_ref$release_date","release_date","_ref$genres","genres","_ref$overview","overview","location","useLocation","comeBack","useRef","state","from","useEffect","then","useParams","_jsxs","children","Link","to","current","className","Poster","substring","map","_ref2","join","Suspense","Outlet"],"sourceRoot":""}